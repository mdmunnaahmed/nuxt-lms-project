{"version":3,"file":"AuthStore-db9531fe.js","sources":["../../../../stores/AuthStore.js"],"sourcesContent":["export const useAuthStore = defineStore(\"authStore\", {\n  state: () => ({\n    name: \"Munna\",\n    studentAccounts: [\n      {\n        thumb: \"munns.jpg\",\n        uname: \"username\",\n        name: \"Munna Ahmed\",\n        email: \"demo@mail.com\",\n        password: \"username\",\n        id: 1,\n      },\n    ],\n    authUser: [],\n    serverError: null,\n    isLoggedIn: false,\n    loading: false,\n  }),\n  actions: {\n    // async getAccounts() {\n    //   const res = await fetch(\"http://localhost:3000/studentAccounts\");\n    //   const data = await res.json();\n    //   this.studentAccounts = data;\n    // },\n    // getAuthUser() {\n    //   this.authUser = JSON.parse(localStorage.getItem(\"user\"));\n    //   this.isLoggedIn = localStorage.getItem(\"isLoggedIn\");\n    // },\n    async addAccount(account) {\n      this.loading = true;\n      this.studentAccounts.push(account);\n      // const res = await fetch(\"http://localhost:3000/studentAccounts\", {\n      //   method: \"POST\",\n      //   body: JSON.stringify(account),\n      //   headers: { \"Content-Type\": \"application/json\" },\n      // });\n      \n      this.authUser = account;\n      this.isLoggedIn = true;\n      // localStorage.setItem(\"user\", JSON.stringify(account));\n      // localStorage.setItem(\"isLoggedIn\", true);\n      if (res.error) {\n        this.serverError = res.error;\n      }\n      this.loading = false;\n    },\n    async addAccountInfo(accountInfo) {\n      const authId = this.authUser.id;\n      console.log(authId);\n      this.loading = true;\n      Object.assign(this.studentAccounts[authId - 1], accountInfo);\n\n      const res = await fetch(\"http://localhost:3000/studentAccounts/\" + [authId], {\n        method: \"PUT\",\n        body: JSON.stringify(accountInfo),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      // this.authUser = accountInfo;\n      if (res.error) {\n        this.serverError = res.error;\n      }\n      this.loading = false;\n    },\n    async updateAccount(updateData, id) {\n      this.loading = true;\n      this.studentAccounts.push(updateData);\n      const res = await fetch(\"http://localhost:3000/studentAccounts\" + id, {\n        method: \"PUT\",\n        body: JSON.stringify(updateData),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      this.authUser = updateData;\n      this.isLoggedIn = true;\n      // localStorage.setItem(\"user\", JSON.stringify(updateData));\n      // localStorage.setItem(\"isLoggedIn\", true);\n      if (res.error) {\n        this.serverError = res.error;\n      }\n      this.loading = false;\n    },\n    loginAccount(info) {\n      this.loading = true;\n      // const res = await fetch(\"http://localhost:3000/studentAccounts\");\n      // const data = await res.json();\n\n      const user = this.studentAccounts.find((u) => (u.uname === info.uname || u.email === info.email) && u.password === info.password);\n\n      // if (res.error) {\n      //   this.serverError = res.error;\n      // }\n\n      if (user) {\n        this.authUser = user;\n        this.isLoggedIn = true;\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        localStorage.setItem(\"isLoggedIn\", true);\n      }\n\n      new Promise((resolve) => setTimeout(resolve, 300));\n      this.loading = false;\n    },\n    async deleteTask(id) {\n      this.tasks = this.tasks.filter((t) => {\n        return t.id !== id;\n      });\n\n      const res = await fetch(\"http://localhost:3000/tasks/\" + id, {\n        method: \"DELETE\",\n      });\n      if (res.error) {\n        console.log(res.error);\n      }\n    },\n    async toggleFav(id) {\n      const task = this.tasks.find((t) => t.id === id);\n      task.isFav = !task.isFav;\n\n      const res = await fetch(\"http://localhost:3000/tasks/\" + id, {\n        method: \"PATCH\",\n        body: JSON.stringify({ isFav: task.isFav }),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      if (res.error) {\n        console.log(res.error);\n      }\n    },\n  },\n  getters: {},\n});\n"],"names":["res"],"mappings":"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"}