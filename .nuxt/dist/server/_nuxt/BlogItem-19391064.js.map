{"version":3,"file":"BlogItem-19391064.js","sources":["../../../../components/BlogItem.vue"],"sourcesContent":["<template>\n  <div class=\"single_blog\">\n    <img :src=\"'/images/blog/' + thumb\" class=\"img-fluid\" alt=\"image\" />\n    <div class=\"content_box\">\n      <span\n        >{{ formattedDate }} | <a href=\"\">{{ tag }}</a></span\n      >\n      <h2>\n        <NuxtLink :to=\"'/blog/' + slug\">{{ title }}</NuxtLink>\n      </h2>\n      <NuxtLink :to=\"'blog/'+slug\" class=\"cta d-inline-flex align-items-center\"\n        ><span class=\"mb-0\">READ MORE</span>\n        <svg width=\"13px\" height=\"10px\" viewBox=\"0 0 13 10\">\n          <path d=\"M1,5 L11,5\"></path>\n          <polyline points=\"8 1 12 5 8 9\"></polyline>\n        </svg>\n      </NuxtLink>\n    </div>\n  </div>\n</template>\n\n<script>\nimport useSlug from \"~/composables/useSlug\";\nexport default {\n  props: [\"date\", \"thumb\", \"title\", \"tag\"],\n  setup(props) {\n    const title = ref(props.title);\n    const date = ref(props.date);\n    const { slug } = useSlug(title.value);\n    function formatDate(inputDate) {\n      const parts = inputDate.split(\"/\");\n      const day = parseInt(parts[0], 10);\n      const month = parseInt(parts[1], 10);\n      const year = parseInt(parts[2], 10);\n\n      // Create an array of month names\n      const monthNames = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n\n      // Get the month name\n      const monthName = monthNames[month - 1];\n\n      // Format the date\n      const formattedDate = `${day} ${monthName}, ${year}`;\n\n      return formattedDate;\n    }\n    const formattedDate = formatDate(date.value);\n    return { slug, formattedDate };\n  },\n};\n</script>"],"names":["formattedDate","_ssrRenderAttrs","_mergeProps","_ssrRenderAttr","_push","_parent","_createVNode","_createBlock"],"mappings":";;;;;AAuBA,MAAK,YAAU;AAAA,EACb,OAAO,CAAC,QAAQ,SAAS,SAAS,KAAK;AAAA,EACvC,MAAM,OAAO;AACX,UAAM,QAAQ,IAAI,MAAM,KAAK;AAC7B,UAAM,OAAO,IAAI,MAAM,IAAI;AAC3B,UAAM,EAAE,KAAK,IAAI,QAAQ,MAAM,KAAK;AACpC,aAAS,WAAW,WAAW;AAC7B,YAAM,QAAQ,UAAU,MAAM,GAAG;AACjC,YAAM,MAAM,SAAS,MAAM,CAAC,GAAG,EAAE;AACjC,YAAM,QAAQ,SAAS,MAAM,CAAC,GAAG,EAAE;AACnC,YAAM,OAAO,SAAS,MAAM,CAAC,GAAG,EAAE;AAGlC,YAAM,aAAa;AAAA,QACjB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAIF,YAAM,YAAY,WAAW,QAAQ,CAAC;AAGtC,YAAMA,iBAAgB,GAAG,GAAG,IAAI,SAAS,KAAK,IAAI;AAElD,aAAOA;AAAA,IACT;AACA,UAAM,gBAAgB,WAAW,KAAK,KAAK;AAC3C,WAAO,EAAE,MAAM;EAChB;AACH;;;eA7DOC,eAAAC,WAAA,EAAA,OAAM,cAAa,GAAA,MAAA,CAAA,SAChBC,cAAA,yBAAuB,OAAK,KAAA,iFAG1B,OAAa,aAAA,iCAAoB,OAAG,GAAA;;IAG7B,eAAe,OAAI;AAAA;qBAA9B,CAAsD,GAAAC,QAAAC,UAAA,aAAA;;iCAAnB,OAAK,KAAA,CAAA,EAAA;AAAA;;0CAAL,OAAK,KAAA,GAAA,CAAA;AAAA;;;;;;;IAE/B,cAAY,OAAI;AAAA,IAAE,OAAM;AAAA;qBAAnC,CAMW,GAAAD,QAAAC,UAAA,aAAA;;;;;UALRC,YAAmC,QAA7B,EAAA,OAAM,OAAM,GAAC,WAAS;AAAA,wBAC7BC,YAGM,OAAA;AAAA,YAHD,OAAM;AAAA,YAAO,QAAO;AAAA,YAAO,SAAQ;AAAA;YACtCD,YAA4B,QAAA,EAAtB,GAAE,aAAY,CAAA;AAAA,YACpBA,YAA2C,YAAA,EAAjC,QAAO,eAAc,CAAA;AAAA;;;;;;;;;;;;;;;"}